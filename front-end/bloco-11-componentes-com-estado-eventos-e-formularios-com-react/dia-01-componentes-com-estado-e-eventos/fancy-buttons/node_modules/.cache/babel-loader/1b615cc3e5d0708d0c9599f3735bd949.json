{"ast":null,"code":"var _jsxFileName = \"/home/juan/trybe/Trybe-Exercises/front-end/bloco-11-componentes-com-estado-eventos-e-formularios-com-react/dia-01-componentes-com-estado-e-eventos/fancy-buttons/src/App.jsx\";\n\n/* import React, { Component } from 'react';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    const func1 = () => console.log('Você clicou no botão 1');\n    const func2 = () => console.log('Você clicou no botão 2');\n    const func3 = () => console.log('Você clicou no botão 3');\n\n    return (\n      <div className=\"App\">\n        <button onClick={ func1 }>Botão 1</button>\n        <button onClick={ func2 }>Botão 2</button>\n        <button onClick={ func3 }>Botão 3</button>\n      </div>\n    );\n  }\n}\n\nexport default App; */\nimport React from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor() {\n    super(); // A função abaixo vincula \"manualmente\" o `this` à nossa função\n\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick() {\n    /* Agora esse log retorna o objeto `this`, já acessível para nossa função!\n    Com isso, podemos acessar as `props`, estado do componente (ainda vamos ver como!)\n    e tudo o mais daqui de dentro */\n    console.log(this);\n    console.log('Clicou!');\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: this.handleClick,\n      children: \"Meu bot\\xE3o\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 12\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"names":["React","App","Component","constructor","handleClick","bind","console","log","render"],"sources":["/home/juan/trybe/Trybe-Exercises/front-end/bloco-11-componentes-com-estado-eventos-e-formularios-com-react/dia-01-componentes-com-estado-e-eventos/fancy-buttons/src/App.jsx"],"sourcesContent":["/* import React, { Component } from 'react';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    const func1 = () => console.log('Você clicou no botão 1');\n    const func2 = () => console.log('Você clicou no botão 2');\n    const func3 = () => console.log('Você clicou no botão 3');\n\n    return (\n      <div className=\"App\">\n        <button onClick={ func1 }>Botão 1</button>\n        <button onClick={ func2 }>Botão 2</button>\n        <button onClick={ func3 }>Botão 3</button>\n      </div>\n    );\n  }\n}\n\nexport default App; */\n\nimport React from 'react';\nimport './App.css';\n\nclass App extends React.Component {\n  constructor() {\n    super()\n    // A função abaixo vincula \"manualmente\" o `this` à nossa função\n    this.handleClick = this.handleClick.bind(this)\n  }\n\n  handleClick() {\n    /* Agora esse log retorna o objeto `this`, já acessível para nossa função!\n    Com isso, podemos acessar as `props`, estado do componente (ainda vamos ver como!)\n    e tudo o mais daqui de dentro */\n    console.log(this)\n    console.log('Clicou!')\n  }\n\n  render() {\n    return <button onClick={this.handleClick}>Meu botão</button>\n  }\n}\n\nexport default App;"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;;;AAEA,MAAMC,GAAN,SAAkBD,KAAK,CAACE,SAAxB,CAAkC;EAChCC,WAAW,GAAG;IACZ,QADY,CAEZ;;IACA,KAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAnB;EACD;;EAEDD,WAAW,GAAG;IACZ;AACJ;AACA;IACIE,OAAO,CAACC,GAAR,CAAY,IAAZ;IACAD,OAAO,CAACC,GAAR,CAAY,SAAZ;EACD;;EAEDC,MAAM,GAAG;IACP,oBAAO;MAAQ,OAAO,EAAE,KAAKJ,WAAtB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAP;EACD;;AAjB+B;;AAoBlC,eAAeH,GAAf"},"metadata":{},"sourceType":"module"}