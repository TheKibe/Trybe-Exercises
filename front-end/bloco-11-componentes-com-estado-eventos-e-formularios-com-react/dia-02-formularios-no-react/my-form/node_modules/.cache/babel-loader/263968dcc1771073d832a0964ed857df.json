{"ast":null,"code":"var _jsxFileName = \"/home/juan/trybe/Trybe-Exercises/front-end/bloco-11-componentes-com-estado-eventos-e-formularios-com-react/dia-02-formularios-no-react/my-form/src/App.jsx\";\n// Para fixar\n// 1 - Crie um formulário com um campo select, dois inputs de tipo diferente, uma textarea e faça de um deles um componente controlado, ou seja, elementos do formulário controlados pelo Estado ✔️\n// 2 - Baixe a React Developer Tools e veja, nela, o dado inserido no elemento controlado sendo salvo no Estado. ✔️\n// 3 - Faça todos os seus elementos componentes do formulário ficarem 100% controlados. Faça um event handler genérico para lidar com eles.\n// 4 - Acrescente no seu formulário um input do tipo checkbox e garanta que seu event handler esteja tratando este caso corretamente.\n// 5 - Busque na documentação de React acerca de formulários (primeiro link da seção de Recursos Adicionais!) como se deve adicionar um input para arquivos. Acrescente um ao seu formulário.\n// 6 - Encapsule alguns dos seus campos num fieldset. Entenda como ele funciona lendo a documentação.\nimport React, { Component } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.handleChange = this.handleChange.bind(this);\n    this.state = {\n      name: ''\n    };\n  }\n\n  handleChange(_ref) {\n    let {\n      target\n    } = _ref;\n    const {\n      name\n    } = target;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        action: \"\",\n        className: \"form\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Seu Xablau Favorito:\", /*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"\",\n            id: \"\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Xablau\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Xablau\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Xablau\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Nome completo:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: this.state.name,\n            onChange: this.handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Idade:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Sobre voc\\xEA:\", /*#__PURE__*/_jsxDEV(\"textarea\", {\n            cols: \"30\",\n            rows: \"10\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"names":["React","Component","App","constructor","handleChange","bind","state","name","target","value","type","checked","setState","render"],"sources":["/home/juan/trybe/Trybe-Exercises/front-end/bloco-11-componentes-com-estado-eventos-e-formularios-com-react/dia-02-formularios-no-react/my-form/src/App.jsx"],"sourcesContent":["// Para fixar\n\n// 1 - Crie um formulário com um campo select, dois inputs de tipo diferente, uma textarea e faça de um deles um componente controlado, ou seja, elementos do formulário controlados pelo Estado ✔️\n\n// 2 - Baixe a React Developer Tools e veja, nela, o dado inserido no elemento controlado sendo salvo no Estado. ✔️\n\n// 3 - Faça todos os seus elementos componentes do formulário ficarem 100% controlados. Faça um event handler genérico para lidar com eles.\n\n// 4 - Acrescente no seu formulário um input do tipo checkbox e garanta que seu event handler esteja tratando este caso corretamente.\n\n// 5 - Busque na documentação de React acerca de formulários (primeiro link da seção de Recursos Adicionais!) como se deve adicionar um input para arquivos. Acrescente um ao seu formulário.\n\n// 6 - Encapsule alguns dos seus campos num fieldset. Entenda como ele funciona lendo a documentação.\n\nimport React, { Component } from 'react';\nimport './App.css';\n\nclass App extends Component {\n  constructor() {\n    super()\n\n    this.handleChange = this.handleChange.bind(this);\n\n    this.state = {\n      name: '',\n    }\n  }\n\n  handleChange({target}) {\n    const { name } = target;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <form action=\"\" className='form'>\n          <label>\n            Seu Xablau Favorito:\n            <select name=\"\" id=\"\">\n              <option value=\"\">Xablau</option>\n              <option value=\"\">Xablau</option>\n              <option value=\"\">Xablau</option>\n            </select>\n          </label>\n\n          <label>\n            Nome completo:\n            <input\n              type=\"text\"\n              value={this.state.name}\n              onChange={this.handleChange}\n            />\n          </label>\n\n          <label>\n            Idade:\n            <input type=\"number\" />\n          </label>\n\n          <label>\n            Sobre você:\n            <textarea cols=\"30\" rows=\"10\"></textarea>\n          </label>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"],"mappings":";AAAA;AAEA;AAEA;AAEA;AAEA;AAEA;AAEA;AAEA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;;;AAEA,MAAMC,GAAN,SAAkBD,SAAlB,CAA4B;EAC1BE,WAAW,GAAG;IACZ;IAEA,KAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;IAEA,KAAKC,KAAL,GAAa;MACXC,IAAI,EAAE;IADK,CAAb;EAGD;;EAEDH,YAAY,OAAW;IAAA,IAAV;MAACI;IAAD,CAAU;IACrB,MAAM;MAAED;IAAF,IAAWC,MAAjB;IACA,MAAMC,KAAK,GAAGD,MAAM,CAACE,IAAP,KAAgB,UAAhB,GAA6BF,MAAM,CAACG,OAApC,GAA8CH,MAAM,CAACC,KAAnE;IACA,KAAKG,QAAL,CAAc;MACZ,CAACL,IAAD,GAAQE;IADI,CAAd;EAGD;;EAEDI,MAAM,GAAG;IACP,oBACE;MAAK,SAAS,EAAC,KAAf;MAAA,uBACE;QAAM,MAAM,EAAC,EAAb;QAAgB,SAAS,EAAC,MAA1B;QAAA,wBACE;UAAA,gDAEE;YAAQ,IAAI,EAAC,EAAb;YAAgB,EAAE,EAAC,EAAnB;YAAA,wBACE;cAAQ,KAAK,EAAC,EAAd;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QADF,eAEE;cAAQ,KAAK,EAAC,EAAd;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QAFF,eAGE;cAAQ,KAAK,EAAC,EAAd;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QAHF;UAAA;YAAA;YAAA;YAAA;UAAA,QAFF;QAAA;UAAA;UAAA;UAAA;QAAA,QADF,eAUE;UAAA,0CAEE;YACE,IAAI,EAAC,MADP;YAEE,KAAK,EAAE,KAAKP,KAAL,CAAWC,IAFpB;YAGE,QAAQ,EAAE,KAAKH;UAHjB;YAAA;YAAA;YAAA;UAAA,QAFF;QAAA;UAAA;UAAA;UAAA;QAAA,QAVF,eAmBE;UAAA,kCAEE;YAAO,IAAI,EAAC;UAAZ;YAAA;YAAA;YAAA;UAAA,QAFF;QAAA;UAAA;UAAA;UAAA;QAAA,QAnBF,eAwBE;UAAA,0CAEE;YAAU,IAAI,EAAC,IAAf;YAAoB,IAAI,EAAC;UAAzB;YAAA;YAAA;YAAA;UAAA,QAFF;QAAA;UAAA;UAAA;UAAA;QAAA,QAxBF;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QADF;EAiCD;;AArDyB;;AAwD5B,eAAeF,GAAf"},"metadata":{},"sourceType":"module"}