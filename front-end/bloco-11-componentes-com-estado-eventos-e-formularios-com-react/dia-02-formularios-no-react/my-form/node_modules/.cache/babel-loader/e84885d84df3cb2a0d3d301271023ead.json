{"ast":null,"code":"var _jsxFileName = \"/home/juan/trybe/Trybe-Exercises/front-end/bloco-11-componentes-com-estado-eventos-e-formularios-com-react/dia-02-formularios-no-react/my-form/src/App.jsx\";\n// Para fixar\n// 1 - Crie um formulário com um campo select, dois inputs de tipo diferente, uma textarea e faça de um deles um componente controlado, ou seja, elementos do formulário controlados pelo Estado ✔️\n// 2 - Baixe a React Developer Tools e veja, nela, o dado inserido no elemento controlado sendo salvo no Estado. ✔️\n// 3 - Faça todos os seus elementos componentes do formulário ficarem 100% controlados. Faça um event handler genérico para lidar com eles. ✔️\n// 4 - Acrescente no seu formulário um input do tipo checkbox e garanta que seu event handler esteja tratando este caso corretamente. ✔️\n// 5 - Busque na documentação de React acerca de formulários (primeiro link da seção de Recursos Adicionais!) como se deve adicionar um input para arquivos. Acrescente um ao seu formulário.\n// 6 - Encapsule alguns dos seus campos num fieldset. Entenda como ele funciona lendo a documentação.\nimport React, { Component } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.handleChange = this.handleChange.bind(this);\n    this.state = {\n      selectXablau: '',\n      name: '',\n      age: 1,\n      textArea: '',\n      photo: '',\n      checkbox: false\n    };\n  }\n\n  handleChange(_ref) {\n    let {\n      target\n    } = _ref;\n    const {\n      name\n    } = target;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        action: \"\",\n        className: \"form\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Seu Xablau Favorito:\", /*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"selectXablau\",\n            value: this.state.selectXablau,\n            onChange: this.handleChange,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"XablauPrimeiro\",\n              children: \"Xablau 1\\xB0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"XablauSegundo\",\n              children: \"Xablau 2\\xB0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"XablauTerceiro\",\n              children: \"Xablau 3\\xB0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Nome completo:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"name\",\n            type: \"text\",\n            value: this.state.name,\n            onChange: this.handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Idade:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            name: \"age\",\n            value: this.state.age,\n            onChange: this.handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Sobre voc\\xEA:\", /*#__PURE__*/_jsxDEV(\"textarea\", {\n            cols: \"30\",\n            rows: \"10\",\n            name: \"textArea\",\n            value: this.state.textArea,\n            onChange: this.handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Foto:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            name: \"photo\",\n            value: this.state.photo,\n            onChange: this.handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Concorda com os termos de uso (vender sua alma):\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            name: \"checkbox\",\n            value: this.state.checkbox,\n            onChange: this.handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"names":["React","Component","App","constructor","handleChange","bind","state","selectXablau","name","age","textArea","photo","checkbox","target","value","type","checked","setState","render"],"sources":["/home/juan/trybe/Trybe-Exercises/front-end/bloco-11-componentes-com-estado-eventos-e-formularios-com-react/dia-02-formularios-no-react/my-form/src/App.jsx"],"sourcesContent":["// Para fixar\n\n// 1 - Crie um formulário com um campo select, dois inputs de tipo diferente, uma textarea e faça de um deles um componente controlado, ou seja, elementos do formulário controlados pelo Estado ✔️\n\n// 2 - Baixe a React Developer Tools e veja, nela, o dado inserido no elemento controlado sendo salvo no Estado. ✔️\n\n// 3 - Faça todos os seus elementos componentes do formulário ficarem 100% controlados. Faça um event handler genérico para lidar com eles. ✔️\n\n// 4 - Acrescente no seu formulário um input do tipo checkbox e garanta que seu event handler esteja tratando este caso corretamente. ✔️\n\n// 5 - Busque na documentação de React acerca de formulários (primeiro link da seção de Recursos Adicionais!) como se deve adicionar um input para arquivos. Acrescente um ao seu formulário.\n\n// 6 - Encapsule alguns dos seus campos num fieldset. Entenda como ele funciona lendo a documentação.\n\nimport React, { Component } from 'react';\nimport './App.css';\n\nclass App extends Component {\n  constructor() {\n    super()\n\n    this.handleChange = this.handleChange.bind(this);\n\n    this.state = {\n      selectXablau: '',\n      name: '',\n      age: 1,\n      textArea: '',\n      photo: '',\n      checkbox: false\n    };\n  }\n\n  handleChange({ target }) {\n    const { name } = target;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <form action=\"\" className='form'>\n          <label>\n            Seu Xablau Favorito:\n            <select\n              name=\"selectXablau\"\n              value={this.state.selectXablau}\n              onChange={this.handleChange}\n            >\n              <option value=\"XablauPrimeiro\">Xablau 1°</option>\n              <option value=\"XablauSegundo\">Xablau 2°</option>\n              <option value=\"XablauTerceiro\">Xablau 3°</option>\n            </select>\n          </label>\n\n          <label>\n            Nome completo:\n            <input\n              name='name'\n              type=\"text\"\n              value={this.state.name}\n              onChange={this.handleChange}\n            />\n          </label>\n\n          <label>\n            Idade:\n            <input\n              type=\"number\"\n              name='age'\n              value={this.state.age}\n              onChange={this.handleChange}\n            />\n          </label>\n\n          <label>\n            Sobre você:\n            <textarea\n              cols=\"30\"\n              rows=\"10\"\n              name='textArea'\n              value={this.state.textArea}\n              onChange={this.handleChange}\n            >\n            </textarea>\n          </label>\n\n          <label>\n            Foto:\n            <input type=\"file\" name=\"photo\" value={this.state.photo} onChange={this.handleChange} />\n          </label>\n\n          <label>\n            Concorda com os termos de uso (vender sua alma):\n            <input\n              type=\"checkbox\"\n              name=\"checkbox\"\n              value={this.state.checkbox}\n              onChange={this.handleChange}\n            />\n          </label>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}